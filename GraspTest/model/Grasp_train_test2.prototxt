name: "GraspNet"
layer {
	name: "Grasp_data"
	type: "Data"
	top: "Grasp_data"
	top: "label"
	data_param {
		source: "../ImageSet/lmdbcolor"
		batch_size: 64
		backend:LMDB
	}
	transform_param {
		mirror:1
		mean_file: "../ImageSet/MeanFile/meancolor.binaryproto"
	}
}
layer {
	name: "Grasp_conv1"
	type: "Convolution"
	bottom: "Grasp_data"
	top: "Grasp_conv1"
	param{
	lr_mult:1
	}
	param{
		lr_mult:2
	}
	convolution_param {
		num_output: 96
		kernel_size: 11
		stride: 4
		weight_filler {
			type: "gaussian"
			std: 0.01
		}
		bias_filler {
			type: "constant"
			value: 0
		}
	}
}
layer {
	name: "Grasp_relu1"
	type: "ReLU"
	bottom: "Grasp_conv1"
	top: "Grasp_conv1"
}
layer {
	name: "Grasp_pool1"
	type: "Pooling"
	bottom: "Grasp_conv1"
	top: "Grasp_pool1"
	pooling_param {
		pool: MAX
		kernel_size: 3
		stride: 2
	}
}
layer {
	name: "Grasp_norm1"
	type: "LRN"
	bottom: "Grasp_pool1"
	top: "Grasp_norm1"
	lrn_param {
		local_size: 5
		alpha: 0.0001
		beta: 0.75
	}
}
layer {
	name: "Grasp_conv2"
	type: "Convolution"
	bottom: "Grasp_norm1"
	top: "Grasp_conv2"
	param{
		lr_mult:1
	}
	param{
		lr_mult:2
	}
	convolution_param {
		num_output: 256
		pad: 2
		kernel_size: 5
		group: 2
		weight_filler {
			type: "gaussian"
			std: 0.01
		}
		bias_filler {
			type: "constant"
			value: 1
		}
	}
}
layer {
	name: "Grasp_relu2"
	type: "ReLU"
	bottom: "Grasp_conv2"
	top: "Grasp_conv2"
}
layer {
	name: "Grasp_pool2"
	type: "Pooling"
	bottom: "Grasp_conv2"
	top: "Grasp_pool2"
	pooling_param {
		pool: MAX
		kernel_size: 3
		stride: 2
	}
}
layer {
	name: "Grasp_norm2"
	type: "LRN"
	bottom: "Grasp_pool2"
	top: "Grasp_norm2"
	lrn_param {
		local_size: 5
		alpha: 0.0001
		beta: 0.75
	}
}
layer {
	name: "Grasp_conv3"
	type: "Convolution"
	bottom: "Grasp_norm2"
	top: "Grasp_conv3"
	param{
		lr_mult:1
	}
	param{
		lr_mult:2
	}
	convolution_param {
		num_output: 384
		pad: 1
		kernel_size: 3
		weight_filler {
			type: "gaussian"
			std: 0.01
		}
		bias_filler {
			type: "constant"
			value: 0
		}
	}
}
layer {
	name: "Grasp_relu3"
	type: "ReLU"
	bottom: "Grasp_conv3"
	top: "Grasp_conv3"
}
layer {
	name: "Grasp_conv4"
	type: "Convolution"
	bottom: "Grasp_conv3"
	top: "Grasp_conv4"
	param{
		lr_mult:1
	}
	param{
		lr_mult:2
	}
	convolution_param {
		num_output: 384
		pad: 1
		kernel_size: 3
		group: 2
		weight_filler {
			type: "gaussian"
			std: 0.01
		}
		bias_filler {
			type: "constant"
			value: 1
		}
	}
}
layer {
	name: "Grasp_relu4"
	type: "ReLU"
	bottom: "Grasp_conv4"
	top: "Grasp_conv4"
}
layer {
	name: "Grasp_conv5"
	type: "Convolution"
	bottom: "Grasp_conv4"
	top: "Grasp_conv5"
	param{
		lr_mult:1
	}
	param{
		lr_mult:2
	}
	convolution_param {
		num_output: 256
		pad: 1
		kernel_size: 3
		group: 2
		weight_filler {
			type: "gaussian"
			std: 0.01
		}
		bias_filler {
			type: "constant"
			value: 1
		}
	}
}
layer {
	name: "Grasp_relu5"
	type: "ReLU"
	bottom: "Grasp_conv5"
	top: "Grasp_conv5"
}
layer {
	name: "Grasp_pool5"
	type: "Pooling"
	bottom: "Grasp_conv5"
	top: "Grasp_pool5"
	pooling_param {
		pool: MAX
		kernel_size: 3
		stride: 2
	}
}
layer {
  name: "Grasp_fc6"
  type: "InnerProduct"
  bottom: "Grasp_pool5"
  top: "Grasp_fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "Grasp_relu6"
  type: "ReLU"
  bottom: "Grasp_fc6"
  top: "Grasp_fc6"
}
layer {
  name: "Grasp_drop6"
  type: "Dropout"
  bottom: "Grasp_fc6"
  top: "Grasp_fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}

layer{
	name:"DexNet-CloudPoints"
	type:"Data"
	top:"data"
	transform_param{
		mirror:1
		mean_file:"../ImageSet/MeanFile/meandepth.binaryproto"
	}
	data_param{
		source:"../ImageSet/lmdbdepth"
		batch_size:64
		backend:LMDB
	}
}
layer{
	name:"DexNet-conv1-1"
	type:"Convolution"
	bottom:"data"
	top:"conv1-1"
	param{
		lr_mult:1
	}
	param{
		lr_mult:2
	}
	convolution_param{
		num_output:64
		kernel_size:7
		stride:1
		weight_filler{
			type:"xavier"
		}
		bias_filler{
			type:"constant"
		}
	}
}

layer {
  name: "DexNet-relu1-1"
  type: "ReLU"
  bottom: "conv1-1"
  top: "conv1-1"
}

layer{
	name:"DexNet-conv1-2"
	type:"Convolution"
	bottom:"conv1-1"
	top:"conv1-2"
	param{
		lr_mult:1
	}
	param{
		lr_mult:2
	}
	convolution_param{
		num_output:64
		kernel_size:5
		stride:1
		weight_filler{
			type:"xavier"
		}
		bias_filler{
			type:"constant"
		}
	}
}
layer {
  name: "DexNet-relu1-2"
  type: "ReLU"
  bottom: "conv1-2"
  top: "conv1-2"
}
layer {
  name: "DexNet-pool1"
  type: "Pooling"
  bottom: "conv1-2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer{
	name:"DexNet-LRN1"
	type:"LRN"
	bottom:"pool1"
	top:"LRN1"
	lrn_param{
		alpha : 2.0e-05
		beta : 0.75
		local_size : 5
		norm_region : WITHIN_CHANNEL
	}
}

layer{
	name:"DexNet-conv2-1"
	type:"Convolution"
	bottom:"LRN1"
	top:"conv2-1"
	param{
		lr_mult:1
	}
	param{
		lr_mult:2
	}
	convolution_param{
		num_output:64
		kernel_size:3
		stride:1
		weight_filler{
			type:"xavier"
		}
		bias_filler{
			type:"constant"
		}
	}
}

layer {
  name: "DexNet-relu2-1"
  type: "ReLU"
  bottom: "conv2-1"
  top: "conv2-1"
}

layer{
	name:"DexNet-conv2-2"
	type:"Convolution"
	bottom:"conv2-1"
	top:"conv2-2"
	param{
		lr_mult:1
	}
	param{
		lr_mult:2
	}
	convolution_param{
		num_output:64
		kernel_size:3
		stride:1
		weight_filler{
			type:"xavier"
		}
		bias_filler{
			type:"constant"
		}
	}
}
layer {
  name: "DexNet-relu2-2"
  type: "ReLU"
  bottom: "conv2-2"
  top: "conv2-2"
}

layer{
	name:"DexNet-LRN2"
	type:"LRN"
	bottom:"conv2-2"
	top:"LRN2"
	lrn_param{
		alpha : 2.0e-05
		beta : 0.75
		local_size : 5
		norm_region : WITHIN_CHANNEL
	}
}
layer {
  name: "DexNet-fc3"
  type: "InnerProduct"
  bottom: "LRN2"
  top: "fc3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "DexNet-relu3"
  type: "ReLU"
  bottom: "fc3"
  top: "fc3"
}

layer{
	name:"Grasp_Concat"
	type:"Concat"
	bottom:"fc3"
	bottom:"Grasp_fc6"
	top:"Concat"
	concat_param{
		axis:1
	}
}

layer {
  name: "Grasp_fc7"
  type: "InnerProduct"
  bottom: "Concat"
  top: "Grasp_fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "Grasp_relu7"
  type: "ReLU"
  bottom: "Grasp_fc7"
  top: "Grasp_fc7"
}
layer {
  name: "Grasp_fc8"
  type: "InnerProduct"
  bottom: "Grasp_fc7"
  top: "Grasp_fc8"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "Grasp_accuracy"
  type: "Accuracy"
  bottom: "Grasp_fc8"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "Grasp_loss"
  type: "SoftmaxWithLoss"
  bottom: "Grasp_fc8"
  bottom: "label"
  top: "loss"
}

